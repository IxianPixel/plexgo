/*
Plex-API

An Open API Spec for interacting with Plex.tv and Plex Servers

API version: 0.0.3
Contact: Lukeslakemail@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pms

import (
	"encoding/json"
)

// checks if the GetButlerTasks200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetButlerTasks200Response{}

// GetButlerTasks200Response struct for GetButlerTasks200Response
type GetButlerTasks200Response struct {
	ButlerTasks *GetButlerTasks200ResponseButlerTasks `json:"ButlerTasks,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetButlerTasks200Response GetButlerTasks200Response

// NewGetButlerTasks200Response instantiates a new GetButlerTasks200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetButlerTasks200Response() *GetButlerTasks200Response {
	this := GetButlerTasks200Response{}
	return &this
}

// NewGetButlerTasks200ResponseWithDefaults instantiates a new GetButlerTasks200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetButlerTasks200ResponseWithDefaults() *GetButlerTasks200Response {
	this := GetButlerTasks200Response{}
	return &this
}

// GetButlerTasks returns the ButlerTasks field value if set, zero value otherwise.
func (o *GetButlerTasks200Response) GetButlerTasks() GetButlerTasks200ResponseButlerTasks {
	if o == nil || isNil(o.ButlerTasks) {
		var ret GetButlerTasks200ResponseButlerTasks
		return ret
	}
	return *o.ButlerTasks
}

// GetButlerTasksOk returns a tuple with the ButlerTasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetButlerTasks200Response) GetButlerTasksOk() (*GetButlerTasks200ResponseButlerTasks, bool) {
	if o == nil || isNil(o.ButlerTasks) {
		return nil, false
	}
	return o.ButlerTasks, true
}

// HasButlerTasks returns a boolean if a field has been set.
func (o *GetButlerTasks200Response) HasButlerTasks() bool {
	if o != nil && !isNil(o.ButlerTasks) {
		return true
	}

	return false
}

// SetButlerTasks gets a reference to the given GetButlerTasks200ResponseButlerTasks and assigns it to the ButlerTasks field.
func (o *GetButlerTasks200Response) SetButlerTasks(v GetButlerTasks200ResponseButlerTasks) {
	o.ButlerTasks = &v
}

func (o GetButlerTasks200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetButlerTasks200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ButlerTasks) {
		toSerialize["ButlerTasks"] = o.ButlerTasks
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetButlerTasks200Response) UnmarshalJSON(bytes []byte) (err error) {
	varGetButlerTasks200Response := _GetButlerTasks200Response{}

	if err = json.Unmarshal(bytes, &varGetButlerTasks200Response); err == nil {
		*o = GetButlerTasks200Response(varGetButlerTasks200Response)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "ButlerTasks")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetButlerTasks200Response struct {
	value *GetButlerTasks200Response
	isSet bool
}

func (v NullableGetButlerTasks200Response) Get() *GetButlerTasks200Response {
	return v.value
}

func (v *NullableGetButlerTasks200Response) Set(val *GetButlerTasks200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetButlerTasks200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetButlerTasks200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetButlerTasks200Response(val *GetButlerTasks200Response) *NullableGetButlerTasks200Response {
	return &NullableGetButlerTasks200Response{value: val, isSet: true}
}

func (v NullableGetButlerTasks200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetButlerTasks200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


