/*
Plex-API

An Open API Spec for interacting with Plex.tv and Plex Servers

API version: 0.0.3
Contact: Lukeslakemail@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pms

import (
	"encoding/json"
)

// checks if the GetDevices200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetDevices200Response{}

// GetDevices200Response struct for GetDevices200Response
type GetDevices200Response struct {
	MediaContainer *GetDevices200ResponseMediaContainer `json:"MediaContainer,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetDevices200Response GetDevices200Response

// NewGetDevices200Response instantiates a new GetDevices200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetDevices200Response() *GetDevices200Response {
	this := GetDevices200Response{}
	return &this
}

// NewGetDevices200ResponseWithDefaults instantiates a new GetDevices200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetDevices200ResponseWithDefaults() *GetDevices200Response {
	this := GetDevices200Response{}
	return &this
}

// GetMediaContainer returns the MediaContainer field value if set, zero value otherwise.
func (o *GetDevices200Response) GetMediaContainer() GetDevices200ResponseMediaContainer {
	if o == nil || isNil(o.MediaContainer) {
		var ret GetDevices200ResponseMediaContainer
		return ret
	}
	return *o.MediaContainer
}

// GetMediaContainerOk returns a tuple with the MediaContainer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDevices200Response) GetMediaContainerOk() (*GetDevices200ResponseMediaContainer, bool) {
	if o == nil || isNil(o.MediaContainer) {
		return nil, false
	}
	return o.MediaContainer, true
}

// HasMediaContainer returns a boolean if a field has been set.
func (o *GetDevices200Response) HasMediaContainer() bool {
	if o != nil && !isNil(o.MediaContainer) {
		return true
	}

	return false
}

// SetMediaContainer gets a reference to the given GetDevices200ResponseMediaContainer and assigns it to the MediaContainer field.
func (o *GetDevices200Response) SetMediaContainer(v GetDevices200ResponseMediaContainer) {
	o.MediaContainer = &v
}

func (o GetDevices200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetDevices200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.MediaContainer) {
		toSerialize["MediaContainer"] = o.MediaContainer
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetDevices200Response) UnmarshalJSON(bytes []byte) (err error) {
	varGetDevices200Response := _GetDevices200Response{}

	if err = json.Unmarshal(bytes, &varGetDevices200Response); err == nil {
		*o = GetDevices200Response(varGetDevices200Response)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "MediaContainer")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetDevices200Response struct {
	value *GetDevices200Response
	isSet bool
}

func (v NullableGetDevices200Response) Get() *GetDevices200Response {
	return v.value
}

func (v *NullableGetDevices200Response) Set(val *GetDevices200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetDevices200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetDevices200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetDevices200Response(val *GetDevices200Response) *NullableGetDevices200Response {
	return &NullableGetDevices200Response{value: val, isSet: true}
}

func (v NullableGetDevices200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetDevices200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


