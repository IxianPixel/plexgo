/*
Plex-API

An Open API Spec for interacting with Plex.tv and Plex Servers

API version: 0.0.3
Contact: Lukeslakemail@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pms

import (
	"encoding/json"
)

// checks if the GetTranscodeSessions200ResponseMediaContainer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetTranscodeSessions200ResponseMediaContainer{}

// GetTranscodeSessions200ResponseMediaContainer struct for GetTranscodeSessions200ResponseMediaContainer
type GetTranscodeSessions200ResponseMediaContainer struct {
	Size interface{} `json:"size,omitempty"`
	TranscodeSession interface{} `json:"TranscodeSession,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetTranscodeSessions200ResponseMediaContainer GetTranscodeSessions200ResponseMediaContainer

// NewGetTranscodeSessions200ResponseMediaContainer instantiates a new GetTranscodeSessions200ResponseMediaContainer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetTranscodeSessions200ResponseMediaContainer() *GetTranscodeSessions200ResponseMediaContainer {
	this := GetTranscodeSessions200ResponseMediaContainer{}
	return &this
}

// NewGetTranscodeSessions200ResponseMediaContainerWithDefaults instantiates a new GetTranscodeSessions200ResponseMediaContainer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetTranscodeSessions200ResponseMediaContainerWithDefaults() *GetTranscodeSessions200ResponseMediaContainer {
	this := GetTranscodeSessions200ResponseMediaContainer{}
	return &this
}

// GetSize returns the Size field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetTranscodeSessions200ResponseMediaContainer) GetSize() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetTranscodeSessions200ResponseMediaContainer) GetSizeOk() (*interface{}, bool) {
	if o == nil || isNil(o.Size) {
		return nil, false
	}
	return &o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *GetTranscodeSessions200ResponseMediaContainer) HasSize() bool {
	if o != nil && isNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given interface{} and assigns it to the Size field.
func (o *GetTranscodeSessions200ResponseMediaContainer) SetSize(v interface{}) {
	o.Size = v
}

// GetTranscodeSession returns the TranscodeSession field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetTranscodeSessions200ResponseMediaContainer) GetTranscodeSession() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.TranscodeSession
}

// GetTranscodeSessionOk returns a tuple with the TranscodeSession field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetTranscodeSessions200ResponseMediaContainer) GetTranscodeSessionOk() (*interface{}, bool) {
	if o == nil || isNil(o.TranscodeSession) {
		return nil, false
	}
	return &o.TranscodeSession, true
}

// HasTranscodeSession returns a boolean if a field has been set.
func (o *GetTranscodeSessions200ResponseMediaContainer) HasTranscodeSession() bool {
	if o != nil && isNil(o.TranscodeSession) {
		return true
	}

	return false
}

// SetTranscodeSession gets a reference to the given interface{} and assigns it to the TranscodeSession field.
func (o *GetTranscodeSessions200ResponseMediaContainer) SetTranscodeSession(v interface{}) {
	o.TranscodeSession = v
}

func (o GetTranscodeSessions200ResponseMediaContainer) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetTranscodeSessions200ResponseMediaContainer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Size != nil {
		toSerialize["size"] = o.Size
	}
	if o.TranscodeSession != nil {
		toSerialize["TranscodeSession"] = o.TranscodeSession
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetTranscodeSessions200ResponseMediaContainer) UnmarshalJSON(bytes []byte) (err error) {
	varGetTranscodeSessions200ResponseMediaContainer := _GetTranscodeSessions200ResponseMediaContainer{}

	if err = json.Unmarshal(bytes, &varGetTranscodeSessions200ResponseMediaContainer); err == nil {
		*o = GetTranscodeSessions200ResponseMediaContainer(varGetTranscodeSessions200ResponseMediaContainer)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "size")
		delete(additionalProperties, "TranscodeSession")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetTranscodeSessions200ResponseMediaContainer struct {
	value *GetTranscodeSessions200ResponseMediaContainer
	isSet bool
}

func (v NullableGetTranscodeSessions200ResponseMediaContainer) Get() *GetTranscodeSessions200ResponseMediaContainer {
	return v.value
}

func (v *NullableGetTranscodeSessions200ResponseMediaContainer) Set(val *GetTranscodeSessions200ResponseMediaContainer) {
	v.value = val
	v.isSet = true
}

func (v NullableGetTranscodeSessions200ResponseMediaContainer) IsSet() bool {
	return v.isSet
}

func (v *NullableGetTranscodeSessions200ResponseMediaContainer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetTranscodeSessions200ResponseMediaContainer(val *GetTranscodeSessions200ResponseMediaContainer) *NullableGetTranscodeSessions200ResponseMediaContainer {
	return &NullableGetTranscodeSessions200ResponseMediaContainer{value: val, isSet: true}
}

func (v NullableGetTranscodeSessions200ResponseMediaContainer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetTranscodeSessions200ResponseMediaContainer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


