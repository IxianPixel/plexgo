/*
Plex-API

An Open API Spec for interacting with Plex.tv and Plex Servers

API version: 0.0.3
Contact: Lukeslakemail@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pms

import (
	"encoding/json"
)

// checks if the GetOnDeck200ResponseMediaContainer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetOnDeck200ResponseMediaContainer{}

// GetOnDeck200ResponseMediaContainer struct for GetOnDeck200ResponseMediaContainer
type GetOnDeck200ResponseMediaContainer struct {
	Size interface{} `json:"size,omitempty"`
	AllowSync interface{} `json:"allowSync,omitempty"`
	Identifier interface{} `json:"identifier,omitempty"`
	MediaTagPrefix interface{} `json:"mediaTagPrefix,omitempty"`
	MediaTagVersion interface{} `json:"mediaTagVersion,omitempty"`
	MixedParents interface{} `json:"mixedParents,omitempty"`
	Metadata interface{} `json:"Metadata,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetOnDeck200ResponseMediaContainer GetOnDeck200ResponseMediaContainer

// NewGetOnDeck200ResponseMediaContainer instantiates a new GetOnDeck200ResponseMediaContainer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetOnDeck200ResponseMediaContainer() *GetOnDeck200ResponseMediaContainer {
	this := GetOnDeck200ResponseMediaContainer{}
	return &this
}

// NewGetOnDeck200ResponseMediaContainerWithDefaults instantiates a new GetOnDeck200ResponseMediaContainer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetOnDeck200ResponseMediaContainerWithDefaults() *GetOnDeck200ResponseMediaContainer {
	this := GetOnDeck200ResponseMediaContainer{}
	return &this
}

// GetSize returns the Size field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetOnDeck200ResponseMediaContainer) GetSize() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetOnDeck200ResponseMediaContainer) GetSizeOk() (*interface{}, bool) {
	if o == nil || isNil(o.Size) {
		return nil, false
	}
	return &o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *GetOnDeck200ResponseMediaContainer) HasSize() bool {
	if o != nil && isNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given interface{} and assigns it to the Size field.
func (o *GetOnDeck200ResponseMediaContainer) SetSize(v interface{}) {
	o.Size = v
}

// GetAllowSync returns the AllowSync field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetOnDeck200ResponseMediaContainer) GetAllowSync() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.AllowSync
}

// GetAllowSyncOk returns a tuple with the AllowSync field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetOnDeck200ResponseMediaContainer) GetAllowSyncOk() (*interface{}, bool) {
	if o == nil || isNil(o.AllowSync) {
		return nil, false
	}
	return &o.AllowSync, true
}

// HasAllowSync returns a boolean if a field has been set.
func (o *GetOnDeck200ResponseMediaContainer) HasAllowSync() bool {
	if o != nil && isNil(o.AllowSync) {
		return true
	}

	return false
}

// SetAllowSync gets a reference to the given interface{} and assigns it to the AllowSync field.
func (o *GetOnDeck200ResponseMediaContainer) SetAllowSync(v interface{}) {
	o.AllowSync = v
}

// GetIdentifier returns the Identifier field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetOnDeck200ResponseMediaContainer) GetIdentifier() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetOnDeck200ResponseMediaContainer) GetIdentifierOk() (*interface{}, bool) {
	if o == nil || isNil(o.Identifier) {
		return nil, false
	}
	return &o.Identifier, true
}

// HasIdentifier returns a boolean if a field has been set.
func (o *GetOnDeck200ResponseMediaContainer) HasIdentifier() bool {
	if o != nil && isNil(o.Identifier) {
		return true
	}

	return false
}

// SetIdentifier gets a reference to the given interface{} and assigns it to the Identifier field.
func (o *GetOnDeck200ResponseMediaContainer) SetIdentifier(v interface{}) {
	o.Identifier = v
}

// GetMediaTagPrefix returns the MediaTagPrefix field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetOnDeck200ResponseMediaContainer) GetMediaTagPrefix() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.MediaTagPrefix
}

// GetMediaTagPrefixOk returns a tuple with the MediaTagPrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetOnDeck200ResponseMediaContainer) GetMediaTagPrefixOk() (*interface{}, bool) {
	if o == nil || isNil(o.MediaTagPrefix) {
		return nil, false
	}
	return &o.MediaTagPrefix, true
}

// HasMediaTagPrefix returns a boolean if a field has been set.
func (o *GetOnDeck200ResponseMediaContainer) HasMediaTagPrefix() bool {
	if o != nil && isNil(o.MediaTagPrefix) {
		return true
	}

	return false
}

// SetMediaTagPrefix gets a reference to the given interface{} and assigns it to the MediaTagPrefix field.
func (o *GetOnDeck200ResponseMediaContainer) SetMediaTagPrefix(v interface{}) {
	o.MediaTagPrefix = v
}

// GetMediaTagVersion returns the MediaTagVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetOnDeck200ResponseMediaContainer) GetMediaTagVersion() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.MediaTagVersion
}

// GetMediaTagVersionOk returns a tuple with the MediaTagVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetOnDeck200ResponseMediaContainer) GetMediaTagVersionOk() (*interface{}, bool) {
	if o == nil || isNil(o.MediaTagVersion) {
		return nil, false
	}
	return &o.MediaTagVersion, true
}

// HasMediaTagVersion returns a boolean if a field has been set.
func (o *GetOnDeck200ResponseMediaContainer) HasMediaTagVersion() bool {
	if o != nil && isNil(o.MediaTagVersion) {
		return true
	}

	return false
}

// SetMediaTagVersion gets a reference to the given interface{} and assigns it to the MediaTagVersion field.
func (o *GetOnDeck200ResponseMediaContainer) SetMediaTagVersion(v interface{}) {
	o.MediaTagVersion = v
}

// GetMixedParents returns the MixedParents field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetOnDeck200ResponseMediaContainer) GetMixedParents() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.MixedParents
}

// GetMixedParentsOk returns a tuple with the MixedParents field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetOnDeck200ResponseMediaContainer) GetMixedParentsOk() (*interface{}, bool) {
	if o == nil || isNil(o.MixedParents) {
		return nil, false
	}
	return &o.MixedParents, true
}

// HasMixedParents returns a boolean if a field has been set.
func (o *GetOnDeck200ResponseMediaContainer) HasMixedParents() bool {
	if o != nil && isNil(o.MixedParents) {
		return true
	}

	return false
}

// SetMixedParents gets a reference to the given interface{} and assigns it to the MixedParents field.
func (o *GetOnDeck200ResponseMediaContainer) SetMixedParents(v interface{}) {
	o.MixedParents = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetOnDeck200ResponseMediaContainer) GetMetadata() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetOnDeck200ResponseMediaContainer) GetMetadataOk() (*interface{}, bool) {
	if o == nil || isNil(o.Metadata) {
		return nil, false
	}
	return &o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *GetOnDeck200ResponseMediaContainer) HasMetadata() bool {
	if o != nil && isNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given interface{} and assigns it to the Metadata field.
func (o *GetOnDeck200ResponseMediaContainer) SetMetadata(v interface{}) {
	o.Metadata = v
}

func (o GetOnDeck200ResponseMediaContainer) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetOnDeck200ResponseMediaContainer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Size != nil {
		toSerialize["size"] = o.Size
	}
	if o.AllowSync != nil {
		toSerialize["allowSync"] = o.AllowSync
	}
	if o.Identifier != nil {
		toSerialize["identifier"] = o.Identifier
	}
	if o.MediaTagPrefix != nil {
		toSerialize["mediaTagPrefix"] = o.MediaTagPrefix
	}
	if o.MediaTagVersion != nil {
		toSerialize["mediaTagVersion"] = o.MediaTagVersion
	}
	if o.MixedParents != nil {
		toSerialize["mixedParents"] = o.MixedParents
	}
	if o.Metadata != nil {
		toSerialize["Metadata"] = o.Metadata
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetOnDeck200ResponseMediaContainer) UnmarshalJSON(bytes []byte) (err error) {
	varGetOnDeck200ResponseMediaContainer := _GetOnDeck200ResponseMediaContainer{}

	if err = json.Unmarshal(bytes, &varGetOnDeck200ResponseMediaContainer); err == nil {
		*o = GetOnDeck200ResponseMediaContainer(varGetOnDeck200ResponseMediaContainer)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "size")
		delete(additionalProperties, "allowSync")
		delete(additionalProperties, "identifier")
		delete(additionalProperties, "mediaTagPrefix")
		delete(additionalProperties, "mediaTagVersion")
		delete(additionalProperties, "mixedParents")
		delete(additionalProperties, "Metadata")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetOnDeck200ResponseMediaContainer struct {
	value *GetOnDeck200ResponseMediaContainer
	isSet bool
}

func (v NullableGetOnDeck200ResponseMediaContainer) Get() *GetOnDeck200ResponseMediaContainer {
	return v.value
}

func (v *NullableGetOnDeck200ResponseMediaContainer) Set(val *GetOnDeck200ResponseMediaContainer) {
	v.value = val
	v.isSet = true
}

func (v NullableGetOnDeck200ResponseMediaContainer) IsSet() bool {
	return v.isSet
}

func (v *NullableGetOnDeck200ResponseMediaContainer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetOnDeck200ResponseMediaContainer(val *GetOnDeck200ResponseMediaContainer) *NullableGetOnDeck200ResponseMediaContainer {
	return &NullableGetOnDeck200ResponseMediaContainer{value: val, isSet: true}
}

func (v NullableGetOnDeck200ResponseMediaContainer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetOnDeck200ResponseMediaContainer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


